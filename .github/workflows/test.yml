name: build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ ci-test ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # This workflow contains a single job called "build"
  test_build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout 
        uses: actions/checkout@v2
      
      #setup node
      - name: setup node
        uses: actions/setup-node@v2
      
      # npm install
      - name: install package
        run: npm ci

      # build
      - name: build lib
        run: npm run build-lib

      - name: upload lib
        uses: actions/upload-artifact@v2
        with:
          name: lib
          path: ui/dist/

      - name: build doc
        run: npm run build

      - name: upload doc
        uses: actions/upload-artifact@v2
        with:
          name: doc
          path: dist/
  # This workflow contains a single job called "build"
  test_check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: [test_build]
    outputs:
      change: ${{ steps.check.outputs.change }}
    steps:
      - name: checkout 
        uses: actions/checkout@v2
      - name: check 
        id: check
        uses: thestarweb/action-check-version@main
        with:
          path: "./ui"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: output
        run: echo "last=${{ steps.check.outputs.last }} current=${{ steps.check.outputs.current }} change=${{ steps.check.outputs.change }}"
  publish:
    runs-on: ubuntu-latest
    needs: [test_build, test_check]
    if: ${{needs.test_check.outputs.change == 1}}
    steps:
      - name: checkout 
        uses: actions/checkout@v2
      - name: download-lib
        uses: actions/download-artifact@v2
        with:
          name: lib
          path: ui/dist
      - name: goto-ui
        run: cd ui
      - name: install
        run: npm i
      - name: install ts
        run: npm i typescript
      - name: build d.ts
        run: npm run tsc
      - name: setup release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: 123aaa
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: make zip
        run: zip -q -r lib.zip ./
      - name: upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./lib.zip
          asset_name: lib.zip
          asset_content_type: application/zip
  
